@use './spacing' as *;
@use './breakpoints' as *;
@use 'sass:map';

// MEDIA QUERY HELPER
@mixin respond-to($size) {
  $breakpoints-map: (
    sm: $breakpoint-sm,
    md: $breakpoint-md,
    lg: $breakpoint-lg,
    xl: $breakpoint-xl,
    2xl: $breakpoint-2xl
  );
  $breakpoint: map.get($breakpoints-map, $size);

  @if $breakpoint {
    @media (min-width: $breakpoint) {
      @content;
    }
  } @else {
    @warn 'Unknown breakpoint: #{$size}';
  }
}

// SPACING HELPER
@mixin spacing($property, $size) {
  $spacing-map: (
    0: $spacing-0,
    1: $spacing-1,
    2: $spacing-2,
    3: $spacing-3,
    4: $spacing-4,
    5: $spacing-5,
    6: $spacing-6,
    8: $spacing-8,
    10: $spacing-10,
    12: $spacing-12
  );

  #{$property}: map.get($spacing-map, $size);
}

// VISUALLY HIDDEN HELPER
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0 0 0 0);
  white-space: nowrap;
  border: 0;
}

// FLEX CENTER
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// TEXT TRUNCATE
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
