# .github/workflows/sync-develop.yml
name: Sync develop with main

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  sync-develop:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Fetch branches
        run: |
          git remote set-url origin "https://github.com/${GITHUB_REPOSITORY}.git"
          git fetch --prune --tags origin

      - name: Diagnostics
        run: |
          echo "origin/main:   $(git rev-parse origin/main)"
          echo "origin/develop: $(git rev-parse origin/develop)"
          MB=$(git merge-base origin/main origin/develop)
          echo "merge-base:    ${MB}"
          echo "\nThree-dot changed files (history diff):"
          git diff --name-status origin/main...origin/develop || true
          echo "\nTwo-dot changed files (tree diff):"
          git diff --name-status origin/main origin/develop || true

      - name: Decide if sync is needed (tree diff)
        id: need
        run: |
          if git diff --quiet origin/main origin/develop; then
            echo "need_sync=false" >> $GITHUB_OUTPUT
          else
            echo "need_sync=true" >> $GITHUB_OUTPUT
          fi

      - name: Open or update PR main -> develop
        if: steps.need.outputs.need_sync == 'true'
        env:
          GH_TOKEN: ${{ secrets.PR_CREATE_TOKEN }}
        run: |
          # Avoid duplicate PRs
          OPEN=$(gh pr list --base develop --head main --state open --json number --jq '.[0].number // empty' || true)

          COMMIT_LIST=$(git log --no-merges --cherry --right-only --pretty='- %h %s (%an)' origin/develop...origin/main || true)
          COMPARE_URL="https://github.com/${GITHUB_REPOSITORY}/compare/develop...main"

          BODY_FILE=$(mktemp)
          {
            echo "Automated sync PR: \`main\` → \`develop\`."
            echo
            echo "This PR syncs changes merged into main back to develop."
            echo
            echo "### Compare"
            echo "$COMPARE_URL"
            echo
            echo "### Unique commits on main"
            if [ -n "$COMMIT_LIST" ]; then
              echo "$COMMIT_LIST"
            else
              echo "- No unique commits (histories differ, but trees changed)."
            fi
          } > "$BODY_FILE"

          if [ -z "$OPEN" ]; then
            gh pr create \
              --base develop \
              --head main \
              --title "Sync: main → develop" \
              --body-file "$BODY_FILE" \
              --label automated \
              --label daily-sync
          else
            echo "PR #$OPEN already open. Updating body."
            gh pr edit "$OPEN" --title "Sync: main → develop" --body-file "$BODY_FILE"
          fi

      - name: Nothing to sync
        if: steps.need.outputs.need_sync != 'true'
        run: echo "No file differences between origin/main and origin/develop. Nothing to sync." 