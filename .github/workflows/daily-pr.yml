# .github/workflows/daily-pr.yml
name: Daily PR from develop to main

on:
  schedule:
    - cron: "0 6 * * *" # 8 AM Amsterdam (summer, CEST)
    - cron: "0 7 * * *" # 8 AM Amsterdam (winter, CET)
  workflow_dispatch: # allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch and sync branches
        run: |
          git remote set-url origin "https://github.com/${GITHUB_REPOSITORY}.git"
          git fetch --prune --tags origin
          # Ensure local tracking branches mirror remote tips
          git checkout -B main origin/main
          git checkout -B develop origin/develop

      - name: Create or update PR develop -> main
        env:
          GH_TOKEN: ${{ secrets.PR_CREATE_TOKEN }}
        run: |
          # Re-fetch to ensure up-to-date right before decision
          git fetch --prune origin

          # Determine if there are any file changes between branches (robust across squash/rebase merges)
          if git diff --quiet origin/main...origin/develop; then
            echo "No file differences between origin/main and origin/develop."

            # If an open PR exists, close it to avoid loop
            OPEN_PR_NUMBER=$(gh pr list --base main --head develop --state open --json number --jq '.[0].number // empty' || true)
            if [ -n "$OPEN_PR_NUMBER" ]; then
              echo "Closing existing PR #$OPEN_PR_NUMBER because there are no diffs."
              gh pr comment "$OPEN_PR_NUMBER" --body "Closing automated PR because there are no file changes between main and develop."
              gh pr close "$OPEN_PR_NUMBER"
            fi

            exit 0
          fi

          # Check if a PR already exists
          if gh pr list --base main --head develop --state open --json number --jq 'length' | grep -q '^0$'; then
            echo "Generating commit summary for PR body..."

            # Generate commit list between main..develop (non-merge commits)
            COMMIT_LIST=$(git log --no-merges --pretty='- %h %s (%an)' origin/main..origin/develop || true)

            # Build compare URL
            COMPARE_URL="https://github.com/${GITHUB_REPOSITORY}/compare/main...develop"

            # Create a temporary body file
            BODY_FILE=$(mktemp)
            {
              echo "This is an automated daily PR from \`develop\` to \`main\`."
              echo
              echo "✅ Please review changes before merging."
              echo
              echo "### Compare"
              echo "${COMPARE_URL}"
              echo
              echo "### Changes included"
              if [ -n "$COMMIT_LIST" ]; then
                echo "$COMMIT_LIST"
              else
                echo "- No new commits (branches are in sync)."
              fi
            } > "$BODY_FILE"

            gh pr create \
              --base main \
              --head develop \
              --title "Daily Sync: develop → main" \
              --body-file "$BODY_FILE" \
              --label automated \
              --label daily-sync
          else
            echo "An open PR from develop to main already exists. Updating its body with latest info."

            # Update existing PR body to reflect latest commits
            EXISTING_PR_NUMBER=$(gh pr list --base main --head develop --state open --json number --jq '.[0].number')
            COMMIT_LIST=$(git log --no-merges --pretty='- %h %s (%an)' origin/main..origin/develop || true)
            COMPARE_URL="https://github.com/${GITHUB_REPOSITORY}/compare/main...develop"
            BODY_FILE=$(mktemp)
            {
              echo "This is an automated daily PR from \`develop\` to \`main\`."
              echo
              echo "✅ Please review changes before merging."
              echo
              echo "### Compare"
              echo "${COMPARE_URL}"
              echo
              echo "### Changes included"
              if [ -n "$COMMIT_LIST" ]; then
                echo "$COMMIT_LIST"
              else
                echo "- No new commits (branches are in sync)."
              fi
            } > "$BODY_FILE"
            gh pr edit "$EXISTING_PR_NUMBER" --title "Daily Sync: develop → main" --body-file "$BODY_FILE"
          fi
