# .github/workflows/sast.yml
name: Reusable SAST (Trufflehog)

on:
  workflow_call:
    inputs:
      scan-target:
        description: 'The target to scan ("root", "backend", or "frontend")'
        required: true
        type: string
      artifact-name:
        description: 'The desired name for the uploaded report artifact (e.g., "frontend-trufflehog-report")'
        required: true
        type: string
    outputs:
      vulnerabilities-found:
        description: 'Boolean indicating if vulnerabilities were found ("true" or "false")'
        value: ${{ jobs.scan.outputs.vulnerabilities-found }}
      report-artifact-name:
        description: "The actual name of the artifact uploaded"
        value: ${{ jobs.scan.outputs.report-artifact-name }}

jobs:
  scan:
    name: Trufflehog Scan (${{ inputs.scan-target }})
    runs-on: ubuntu-latest
    outputs:
      vulnerabilities-found: ${{ steps.check_report.outputs.vulnerabilities-found }}
      report-artifact-name: ${{ steps.set_artifact.outputs.artifact-name }}

    steps:
      # STEP 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # STEP 2: Use reusable scan setup (installs dependencies / environment)
      - name: Setup Scan Environment
        uses: ./.github/actions/scan-setup
        with:
          scan-target: ${{ inputs.scan-target }}
          artifact-name: ${{ inputs.artifact-name }}

      # STEP 3: Run Trufflehog scan
      - name: Run Trufflehog scan for ${{ inputs.scan-target }}
        id: trufflehog_scan
        run: |
          REPORT_FILE="trufflehog-report-${{ inputs.scan-target }}.json"
          SCAN_DIR="."
          if [[ "${{ inputs.scan-target }}" == "backend" ]]; then
            SCAN_DIR="./backend"
          elif [[ "${{ inputs.scan-target }}" == "frontend" ]]; then
            SCAN_DIR="./frontend"
          fi

          echo "Running Trufflehog scan in $SCAN_DIR, outputting to $REPORT_FILE"
          trufflehog filesystem "$SCAN_DIR" --json --exclude_paths 'node_modules|.git' > "$REPORT_FILE" || true

          if [[ -f "$REPORT_FILE" ]]; then
            echo "Report generated at $REPORT_FILE"
          else
            echo "Warning: Trufflehog did not produce a report!"
          fi

      # STEP 4: Check Report Content
      - name: Check Report Content
        id: check_report
        run: |
          REPORT_FILE="trufflehog-report-${{ inputs.scan-target }}.json"
          VULNS_FOUND="false"

          if [[ ! -f "$REPORT_FILE" ]]; then
            echo "No report found, assuming no vulnerabilities."
          else
            COUNT=$(jq 'length' "$REPORT_FILE")
            if [[ "$COUNT" -gt 0 ]]; then
              VULNS_FOUND="true"
              echo "Found $COUNT secrets in report."
            else
              echo "No secrets found in report."
            fi
          fi

          echo "vulnerabilities-found=$VULNS_FOUND" >> $GITHUB_OUTPUT

      - name: Set Artifact Name Output
        id: set_artifact_name
        run: echo "artifact-name=${{ inputs.scan-target }}-trufflehog-report" >> $GITHUB_OUTPUT

      - name: Run TruffleHog Scan
        run: |
          mkdir -p ./sast-reports/${{ inputs.scan-target }}
          trufflehog filesystem ./ --json > ./sast-reports/${{ inputs.scan-target }}/${{ inputs.scan-target }}-trufflehog-report.json
        shell: bash

      - name: Upload TruffleHog Report
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set_artifact_name.outputs.artifact-name }}
          path: ./sast-reports/${{ inputs.scan-target }}/${{ inputs.scan-target }}-trufflehog-report.json
          if-no-files-found: warn
