# .github/workflows/sast.yml
# Reusable SAST workflow using TruffleHog, dynamically targets frontend/backend/root

name: Reusable SAST (TruffleHog)

on:
  workflow_call:
    inputs:
      scan-target:
        description: 'The target to scan ("root", "backend", or "frontend")'
        required: true
        type: string
      artifact-name:
        description: 'The desired name for the uploaded report artifact (e.g., "frontend-trufflehog-report")'
        required: true
        type: string
    outputs:
      secrets-found:
        description: 'Boolean indicating if secrets were found ("true" or "false")'
        value: ${{ jobs.sast.outputs.secrets-found }}
      report-artifact-name:
        description: "The actual name of the artifact uploaded"
        value: ${{ jobs.sast.outputs.report-artifact-name }}

jobs:
  sast:
    name: TruffleHog Scan (${{ inputs.scan-target }})
    runs-on: ubuntu-latest
    outputs:
      secrets-found: ${{ steps.check_report.outputs.secrets-found }}
      report-artifact-name: ${{ steps.set_artifact_name.outputs.artifact-name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Report Filename
        id: set_paths
        run: |
          echo "report_filename=trufflehog-report-${{ inputs.scan-target }}.json" >> $GITHUB_OUTPUT

      - name: Run TruffleHog
        id: trufflehog_scan
        run: |
          REPORT_FILENAME="${{ steps.set_paths.outputs.report_filename }}"
          OUTPUT_PATH="./$REPORT_FILENAME"
          RUN_DIR="."

          if [[ "${{ inputs.scan-target }}" == "backend" ]]; then
            RUN_DIR="./backend"
          elif [[ "${{ inputs.scan-target }}" == "frontend" ]]; then
            RUN_DIR="./frontend"
          fi

          if [[ "$RUN_DIR" != "." ]] && [[ ! -d "$RUN_DIR" ]]; then
             echo "Error: Target directory '$RUN_DIR' not found after checkout."
             exit 1
          fi

          echo "Installing TruffleHog v3..."
          pip install --quiet trufflehog

          echo "Running TruffleHog v3 filesystem scan in $RUN_DIR"
          trufflehog filesystem --path="$RUN_DIR" --json > "$OUTPUT_PATH"
          if [[ -f "$OUTPUT_PATH" ]]; then
            echo "Successfully created report at $OUTPUT_PATH"
          else
            echo "Warning: TruffleHog report was not created."
          fi

      - name: Determine Full Report Path
        id: report_full_path
        run: |
          REPORT_FILENAME="${{ steps.set_paths.outputs.report_filename }}"
          FULL_PATH="$REPORT_FILENAME"
          echo "full_path=$FULL_PATH" >> $GITHUB_OUTPUT

      - name: Check Report Content
        id: check_report
        run: |
          FILE="${{ steps.report_full_path.outputs.full_path }}"
          SECRETS_FOUND="false"

          if [[ -f "$FILE" ]]; then
            COUNT=$(jq -s 'map(select(.SourceMetadata)) | length' "$FILE")
            if [[ "$COUNT" -gt 0 ]]; then
              echo "Secrets found: $COUNT"
              SECRETS_FOUND="true"
            else
              echo "No secrets found."
            fi
          else
            echo "Report file not found."
          fi

          echo "secrets-found=$SECRETS_FOUND" >> $GITHUB_OUTPUT

      - name: Set Artifact Name Output
        id: set_artifact_name
        run: echo "artifact-name=${{ inputs.artifact-name }}" >> $GITHUB_OUTPUT

      - name: Upload TruffleHog Report (${{ inputs.scan-target }})
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set_artifact_name.outputs.artifact-name }}
          path: ${{ steps.report_full_path.outputs.full_path }}
          if-no-files-found: warn
