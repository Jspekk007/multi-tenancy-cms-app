generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id        String       @id @default(cuid())
  name      String
  domain    String       @unique
  // A tenant can have many members (TenantUser)
  members   TenantUser[]
  // Roles are defined per tenant
  roles     Role[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Role {
  id          String       @id @default(cuid())
  name        String
  tenantId    String
  tenant      Tenant       @relation(fields: [tenantId], references: [id])
  // A role can be assigned to many members
  members     TenantUser[]
  permissions Json?
}

model User {
  id           String       @id @default(cuid())
  email        String       @unique
  passwordHash String
  // A user can be a member of many tenants
  tenants      TenantUser[]
  sessions     Session[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  lastLogin    DateTime?
  isActive     Boolean      @default(true)
}

// This is our new "join" model
model TenantUser {
  id       String @id @default(cuid())
  tenantId String
  tenant   Tenant @relation(fields: [tenantId], references: [id])
  userId   String
  user     User   @relation(fields: [userId], references: [id])
  roleId   String
  role     Role   @relation(fields: [roleId], references: [id])

  // Ensures a user can only have one role per tenant
  @@unique([tenantId, userId])
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
  isRevoked Boolean  @default(false)
}